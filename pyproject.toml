[build-system]
requires = ["setuptools>=69", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "encodefetch"
dynamic = ["version"]
description = "ENCODEfetch: a command-line tool for retrieving matched case-control data and standardized metadata from ENCODE"
readme = { file = "README.md", content-type = "text/markdown" }
requires-python = ">=3.9"
license = { text = "MIT" }
authors = [{ name = "Aziz Khan", email = "aziz.khan@mbzuai.ac.ae" }]
keywords = ["ENCODE", "ChIP-seq", "ATAC-seq", "RNA-seq", "bioinformatics", "genomics", "metadata", "CLI"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering :: Bio-Informatics",
  "Operating System :: OS Independent",
]

dependencies = [
  "requests>=2.31",
  "pandas>=1.5",
  "rich>=13.7",
  "rich-click>=1.7",
  "click>=8.1",
]

[project.urls]
Homepage = "https://github.com/khan-lab/ENCODEfetch"
Documentation = "https://khan-lab.github.io/ENCODEfetch/"
Source = "https://github.com/khan-lab/ENCODEfetch"
Issues = "https://github.com/khan-lab/ENCODEfetch/issues"

[project.scripts]
ENCODEfetch = "encodefetch.cli:main"
encodefetch = "encodefetch.cli:main"

[project.optional-dependencies]
dev = [
  "pytest>=7.0",
  "pytest-cov>=4.1",
  "black>=24.0",
  "isort>=5.13",
  "flake8>=7.0",
]
docs = [
  "sphinx>=7.2",
  "myst-parser>=2.0",
  "furo>=2024.1.29",
  "sphinx-autodoc-typehints>=2.1",
  "sphinx-copybutton>=0.5.2",
]

[tool.setuptools.dynamic]
version = { attr = "encodefetch.__version__" }

[tool.setuptools]
license-files = ["LICENSE"]
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]
exclude = ["tests*", "docs*", "gitbook*", "examples*"]

# Add non-Python assets logo in the package wheel
[tool.setuptools.package-data]
encodefetch = ["*.png", "*.pdf", "data/*"]
